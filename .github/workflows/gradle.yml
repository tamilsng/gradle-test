---
name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ master ]
env:
  DOCKER_FILE: "./Dockerfile"
  DOCKER_REGISTRY: "gcr.io/diesel-media-340214"
  DOCKER_BUILDKIT: 1      
  IMAGE_NAME: ${{ github.event.repository.name }}
  PROJECT_ID: diesel-media-340214

  GAR_LOCATION: us-central1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: cluster-2    # TODO: update to cluster name
  GKE_ZONE: us-central1-c   # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
  IMAGE: static-site


jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: lesson-089
      PROJECT_ID: diesel-media-340214
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - id: auth
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'
        project_id: ${{ env.PROJECT_ID }}       

    - name: Build Docker Image
      run: |-
        docker pull openjdk
        docker tag openjdk $IMAGE_NAME:latest

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./scripts/git_update.sh -v major

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker us-west2-docker.pkg.dev --quiet

    - name: Push Docker Image to Container Registry (GCR)
      env:
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl get nodes
        kubectl get ns